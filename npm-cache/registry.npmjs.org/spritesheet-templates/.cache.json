{"_id":"spritesheet-templates","_rev":"61-686418703b751c942afbe2a3279a3e29","name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","dist-tags":{"latest":"10.2.1"},"versions":{"7.0.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"7.0.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"test":"mocha"},"dependencies":{"mustache":"~0.7.0","underscore":"~1.4.2","json-content-demux":"~0.1.2"},"devDependencies":{"grunt":"~0.4.5","stylus":"~0.32.0","less":"~1.3.3","temporary":"0.0.5","mocha":"~1.14.0","css-validator":"~0.5.0","express":"~3.4.8","underscore":"~1.4.4","eight-track-normalize-multipart":"~0.1.0","eight-track":"~1.3.0","grunt-contrib-jshint":"~0.10.0","grunt-contrib-watch":"~0.6.1"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"295589d9d027261a1b87f83ae36196da322305ff","_id":"spritesheet-templates@7.0.0","_shasum":"08c92ba396e0a5b8990d3566f039bc4ecf9fb291","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"08c92ba396e0a5b8990d3566f039bc4ecf9fb291","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-7.0.0.tgz"},"directories":{}},"7.0.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"7.0.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"test":"mocha"},"dependencies":{"mustache":"~0.7.0","underscore":"~1.4.2","json-content-demux":"~0.1.2"},"devDependencies":{"grunt":"~0.4.5","stylus":"~0.32.0","less":"~1.3.3","temporary":"0.0.5","mocha":"~1.14.0","css-validator":"~0.5.0","express":"~3.4.8","underscore":"~1.4.4","eight-track-normalize-multipart":"~0.1.0","eight-track":"~1.3.0","grunt-contrib-jshint":"~0.10.0","grunt-contrib-watch":"~0.6.1"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"dac8ccbe9546ec95868a974f4ae6c4e2efca5890","_id":"spritesheet-templates@7.0.1","_shasum":"fef1323f5867d0246577e0a19f60f7b5cf81ff40","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"fef1323f5867d0246577e0a19f60f7b5cf81ff40","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-7.0.1.tgz"},"directories":{}},"7.0.2":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"7.0.2","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"test":"mocha"},"dependencies":{"mustache":"~0.7.0","underscore":"~1.4.2","json-content-demux":"~0.1.2"},"devDependencies":{"grunt":"~0.4.5","stylus":"~0.32.0","less":"~1.3.3","temporary":"0.0.5","mocha":"~1.14.0","css-validator":"~0.5.0","express":"~3.4.8","underscore":"~1.4.4","eight-track-normalize-multipart":"~0.1.0","eight-track":"~1.3.0","grunt-contrib-jshint":"~0.10.0","grunt-contrib-watch":"~0.6.1"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"1b78edf561c53067c202680d52e6ab5ddcb79acf","_id":"spritesheet-templates@7.0.2","_shasum":"0a48499e7bb6c78b9979544ee56d8de90a9f0657","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"0a48499e7bb6c78b9979544ee56d8de90a9f0657","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-7.0.2.tgz"},"directories":{}},"7.1.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"7.1.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","grunt":"~0.4.5","grunt-contrib-jshint":"~0.10.0","grunt-contrib-watch":"~0.6.1","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.3.3","mocha":"~1.14.0","stylus":"~0.32.0","temporary":"0.0.5","twolfson-style":"~1.6.0","underscore":"~1.4.4"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"889c48a1184e9ec64fd0c6935d2465c4f25d0a27","_id":"spritesheet-templates@7.1.0","_shasum":"a0eb5f8f6fe580ed4aaa34ec8b1d91d7d051b7e8","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"a0eb5f8f6fe580ed4aaa34ec8b1d91d7d051b7e8","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-7.1.0.tgz"},"directories":{}},"7.1.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"7.1.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.3.3","mocha":"~1.14.0","stylus":"~0.32.0","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"f74f6f0e998d354ac2ad5f17b8bd8187dfa72040","_id":"spritesheet-templates@7.1.1","_shasum":"65cf2c5a8386797fe4ad9bb81c6a841c4a86201c","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"65cf2c5a8386797fe4ad9bb81c6a841c4a86201c","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-7.1.1.tgz"},"directories":{}},"7.2.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"7.2.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.3.3","mocha":"~1.14.0","stylus":"~0.32.0","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"413f0c21ad9643299e5774c4ee81b223f1a60cd8","_id":"spritesheet-templates@7.2.0","_shasum":"8fc0057f0d73f73f7022fbafb7c1dc012ff67da5","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"8fc0057f0d73f73f7022fbafb7c1dc012ff67da5","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-7.2.0.tgz"},"directories":{}},"8.0.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"8.0.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.3.3","mocha":"~1.14.0","stylus":"~0.32.0","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"aae76910cbd99fbcd43f5684a1b43a502d2e64e5","_id":"spritesheet-templates@8.0.0","_shasum":"084cff20269fdcc5044b3467a500ec12c9f6d100","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"084cff20269fdcc5044b3467a500ec12c9f6d100","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-8.0.0.tgz"},"directories":{}},"8.1.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"8.1.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.3.3","mocha":"~1.14.0","stylus":"~0.32.0","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"60392d3078b8686b5c79c58599a1eb5030522c6a","_id":"spritesheet-templates@8.1.0","_shasum":"c30715409aad13b5f9169be4820cdb73caa0814c","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"c30715409aad13b5f9169be4820cdb73caa0814c","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-8.1.0.tgz"},"directories":{}},"8.2.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"8.2.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"0f1c86156e52379d08bd4a55c9e7699b8d39a02c","_id":"spritesheet-templates@8.2.0","_shasum":"0ec1f24f9878b3e918df6ef53cbbda27df07d486","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.34","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"0ec1f24f9878b3e918df6ef53cbbda27df07d486","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-8.2.0.tgz"},"directories":{}},"8.2.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"8.2.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"00915b076df8d150a42e8357a14e733df1c0483b","_id":"spritesheet-templates@8.2.1","_shasum":"00250d9546b7877ebdbe8928c2bdf99bd9abae3e","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"00250d9546b7877ebdbe8928c2bdf99bd9abae3e","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-8.2.1.tgz"},"directories":{}},"8.3.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"8.3.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"d2051cdc82463ba4d4c1a5e64a5449dfe5772da8","_id":"spritesheet-templates@8.3.0","_shasum":"6165e005b60d73a0e206a49ce6bbf4dc7fc324bc","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"6165e005b60d73a0e206a49ce6bbf4dc7fc324bc","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-8.3.0.tgz"},"directories":{}},"8.4.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"8.4.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"61a460f392e86bf0c756c4da7d0c395ddc602c3a","_id":"spritesheet-templates@8.4.0","_shasum":"824159c2883024f44ad20f4f359c5a6f040e4ebc","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"824159c2883024f44ad20f4f359c5a6f040e4ebc","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-8.4.0.tgz"},"directories":{}},"9.0.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.0.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"d5c144e49231cb730e489344b1bd7e268c68430c","_id":"spritesheet-templates@9.0.0","_shasum":"59581a67cc0f71e0db7e5192981a2506fca4af6a","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"59581a67cc0f71e0db7e5192981a2506fca4af6a","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.0.0.tgz"},"directories":{}},"9.0.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.0.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"80ad6c60ef11426772bf5275eb5f6c50e6fb6085","_id":"spritesheet-templates@9.0.1","_shasum":"275d881fa0d58beb495cf7a3798213e832fe0c19","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"275d881fa0d58beb495cf7a3798213e832fe0c19","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.0.1.tgz"},"directories":{}},"9.1.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.1.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"361aa876161a9137c3cdfd82652ee93c828fbaed","_id":"spritesheet-templates@9.1.0","_shasum":"8902e667b213afe2c08dbb44ab63add93c2d45b5","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"8902e667b213afe2c08dbb44ab63add93c2d45b5","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.1.0.tgz"},"directories":{}},"9.1.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.1.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"json-content-demux":"~0.1.2","mustache":"~0.7.0","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"ddc7c1ac2768026a7194d8a3632cf67f89e4ccba","_id":"spritesheet-templates@9.1.1","_shasum":"97fadc5835b91e2beb6014d771a346d07a5a9960","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"97fadc5835b91e2beb6014d771a346d07a5a9960","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.1.1.tgz"},"directories":{}},"9.2.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.2.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"0d30234050adaff6dac8d994b834741e14a0b005","_id":"spritesheet-templates@9.2.0","_shasum":"491ad51f61e463d1110ee53c0247bcb7bba60835","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.36","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"491ad51f61e463d1110ee53c0247bcb7bba60835","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.2.0.tgz"},"directories":{}},"9.2.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.2.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"e47755d33cd1a1ffbb2cdd84715f7a6ae804ba41","_id":"spritesheet-templates@9.2.1","_shasum":"674d545bbd82a4ce221bcc7b13f802c7b465ac37","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.36","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"674d545bbd82a4ce221bcc7b13f802c7b465ac37","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.2.1.tgz"},"directories":{}},"9.2.2":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.2.2","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"5e370da697c11d2f99f44e4c57df74e8c82350ca","_id":"spritesheet-templates@9.2.2","_shasum":"d491ecd0c4fe06ac3624dc87a937a6ab507ae394","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.36","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"d491ecd0c4fe06ac3624dc87a937a6ab507ae394","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.2.2.tgz"},"directories":{}},"9.3.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.3.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"807e0dfe55a9d4ec1fd15b76e0110bae7ba26a22","_id":"spritesheet-templates@9.3.0","_shasum":"5bd9b08f2ba1dbfa3461a23e2c72552472e4e71e","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.36","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"5bd9b08f2ba1dbfa3461a23e2c72552472e4e71e","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.3.0.tgz"},"directories":{}},"9.3.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.3.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"90c91fc8ff896084e47c75cb5431e0cbe3b4267a","_id":"spritesheet-templates@9.3.1","_shasum":"ba94a75f2e8ef866362e85073f87cd2bb5e9fba2","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.36","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"ba94a75f2e8ef866362e85073f87cd2bb5e9fba2","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.3.1.tgz"},"directories":{}},"9.3.2":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.3.2","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"e58c310cd3ba3756287b1ccd58468a0c65b2eb6b","_id":"spritesheet-templates@9.3.2","_shasum":"604a6f8419de6978319fed8162defac85295d97f","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.38","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"604a6f8419de6978319fed8162defac85295d97f","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.3.2.tgz"},"directories":{}},"9.4.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.4.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track":"~1.3.0","eight-track-normalize-multipart":"~0.1.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","stylus":"~0.41.3","temporary":"0.0.5","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"4758dc777a883c49743d816951cf5b5187a40e96","_id":"spritesheet-templates@9.4.0","_shasum":"64cefc25f7bb8a1a0cf743e1dadc54890acd525a","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.38","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"64cefc25f7bb8a1a0cf743e1dadc54890acd525a","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.4.0.tgz"},"directories":{}},"9.4.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.4.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"6dab2ffe469e071ccdd5e6ba166d59850b942383","_id":"spritesheet-templates@9.4.1","_shasum":"a529974d1c3819100e8c4cbf894bc3f1fdcca00e","_from":".","_npmVersion":"2.3.0","_nodeVersion":"1.7.1","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"a529974d1c3819100e8c4cbf894bc3f1fdcca00e","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.4.1.tgz"},"directories":{}},"9.5.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.5.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/spritesheet-templates/blob/master/LICENSE-MIT"}],"main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"a54405e5c48cf51e9f6444d48ab14745e4990755","_id":"spritesheet-templates@9.5.0","_shasum":"b14d8629cf31ae20b0beec87a727c38a3ca4c135","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"b14d8629cf31ae20b0beec87a727c38a3ca4c135","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.5.0.tgz"},"directories":{}},"9.5.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.5.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"e79a54d73040c2be30e2e4b8d6c85cd05608bcaf","_id":"spritesheet-templates@9.5.1","_shasum":"4cb55152c1a579a32df2c165ec895def476c6883","_from":".","_npmVersion":"2.11.0","_nodeVersion":"0.10.30","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"4cb55152c1a579a32df2c165ec895def476c6883","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.5.1.tgz"},"directories":{}},"9.5.2":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.5.2","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"141d81901374ceb9429a3a82a81c04e81773c959","_id":"spritesheet-templates@9.5.2","_shasum":"2a9abfd7b1e118bee82567ae170a6326b4a579bb","_from":".","_npmVersion":"2.11.0","_nodeVersion":"0.10.30","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"2a9abfd7b1e118bee82567ae170a6326b4a579bb","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.5.2.tgz"},"directories":{}},"9.6.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.6.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"1c1586341cdac4702ad4f66812a1ca63fafd4363","_id":"spritesheet-templates@9.6.0","_shasum":"583fa04e5b8dafbec93159d05ef2bbeafe76d065","_from":".","_npmVersion":"2.11.0","_nodeVersion":"0.10.30","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"583fa04e5b8dafbec93159d05ef2bbeafe76d065","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.6.0.tgz"},"directories":{}},"9.6.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"9.6.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"855cd317f41e9bf41f50bcf822fec4d4bc0f3fd0","_id":"spritesheet-templates@9.6.1","_shasum":"3a3e46f71d3ca997f97e84f1c73814e56b32ad96","_from":".","_npmVersion":"2.11.0","_nodeVersion":"0.10.30","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"3a3e46f71d3ca997f97e84f1c73814e56b32ad96","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-9.6.1.tgz"},"directories":{}},"10.0.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.0.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"gitHead":"f33b34d2f99628e12c29fcb5da832d7d86e3e110","_id":"spritesheet-templates@10.0.0","_shasum":"41b5bbb59b35f53e6d4dc6437d17feabf02fbec8","_from":".","_npmVersion":"2.11.0","_nodeVersion":"0.10.40","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"41b5bbb59b35f53e6d4dc6437d17feabf02fbec8","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.0.0.tgz"},"directories":{}},"10.0.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.0.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","foundry":"~4.3.2","foundry-release-git":"~2.0.2","foundry-release-npm":"~2.0.2","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"foundry":{"releaseCommands":["foundry-release-git","foundry-release-npm"]},"gitHead":"901fd956878d29ade0005c4654bd7f0ba745b394","_id":"spritesheet-templates@10.0.1","_shasum":"79664b400f634c525091c15ebdf0160f1e6735b0","_from":".","_npmVersion":"2.14.15","_nodeVersion":"0.10.41","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"79664b400f634c525091c15ebdf0160f1e6735b0","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.0.1.tgz"},"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/spritesheet-templates-10.0.1.tgz_1454562918995_0.33911877614445984"},"directories":{}},"10.1.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.1.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","foundry":"~4.3.2","foundry-release-git":"~2.0.2","foundry-release-npm":"~2.0.2","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"foundry":{"releaseCommands":["foundry-release-git","foundry-release-npm"]},"gitHead":"8fae98a94fab2be8b9015543cbb255063dd8dc93","_id":"spritesheet-templates@10.1.0","_shasum":"dc77af399ea6192da0c3e0c9490b91dfc527b334","_from":".","_npmVersion":"2.14.15","_nodeVersion":"0.10.41","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"dc77af399ea6192da0c3e0c9490b91dfc527b334","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.1.0.tgz"},"_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/spritesheet-templates-10.1.0.tgz_1454562985296_0.4277683540713042"},"directories":{}},"10.1.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.1.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","foundry":"~4.3.2","foundry-release-git":"~2.0.2","foundry-release-npm":"~2.0.2","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"foundry":{"releaseCommands":["foundry-release-git","foundry-release-npm"]},"gitHead":"5099d828305c52f2342732a123271c22aeee1ca6","_id":"spritesheet-templates@10.1.1","_shasum":"50a22d33325a4cd7266b734bbca4375442ec2319","_from":".","_npmVersion":"2.14.19","_nodeVersion":"4.3.1","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"50a22d33325a4cd7266b734bbca4375442ec2319","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.1.1.tgz"},"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/spritesheet-templates-10.1.1.tgz_1458431112970_0.09369172318838537"},"directories":{}},"10.1.2":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.1.2","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","foundry":"~4.3.2","foundry-release-git":"~2.0.2","foundry-release-npm":"~2.0.2","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"foundry":{"releaseCommands":["foundry-release-git","foundry-release-npm"]},"gitHead":"b0d821ab68eafdd7208c653b52d5ba0c5b46bdf2","_id":"spritesheet-templates@10.1.2","_shasum":"f0eefcc0caf0144d8db4f5c4f011fad0642cb78f","_from":".","_npmVersion":"2.14.19","_nodeVersion":"4.3.1","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"dist":{"shasum":"f0eefcc0caf0144d8db4f5c4f011fad0642cb78f","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.1.2.tgz"},"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/spritesheet-templates-10.1.2.tgz_1458694280520_0.01765875658020377"},"directories":{}},"10.1.3":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.1.3","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~3.0.0","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","foundry":"~4.3.2","foundry-release-git":"~2.0.2","foundry-release-npm":"~2.0.2","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"foundry":{"releaseCommands":["foundry-release-git","foundry-release-npm"]},"gitHead":"01695d608af34149b865989f5b30bac1e6e391ad","_id":"spritesheet-templates@10.1.3","_shasum":"5a80b7390c2177dc2313ecf6e66a9ca20081f524","_from":".","_npmVersion":"2.15.3","_nodeVersion":"4.4.3","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"dist":{"shasum":"5a80b7390c2177dc2313ecf6e66a9ca20081f524","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.1.3.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/spritesheet-templates-10.1.3.tgz_1465238826277_0.8326592340599746"},"directories":{}},"10.1.4":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.1.4","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~4.0.5","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","foundry":"~4.3.2","foundry-release-git":"~2.0.2","foundry-release-npm":"~2.0.2","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"foundry":{"releaseCommands":["foundry-release-git","foundry-release-npm"]},"gitHead":"7ec70b640bb533bd0147cf7d0240b3183c441e65","_id":"spritesheet-templates@10.1.4","_shasum":"fcf982c1e59951aee93fb705040ff1a0da176d14","_from":".","_npmVersion":"2.15.3","_nodeVersion":"4.4.3","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"dist":{"shasum":"fcf982c1e59951aee93fb705040ff1a0da176d14","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.1.4.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/spritesheet-templates-10.1.4.tgz_1465239003991_0.40945032285526395"},"directories":{}},"10.2.0":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.2.0","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~4.0.5","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","foundry":"~4.3.2","foundry-release-git":"~2.0.2","foundry-release-npm":"~2.0.2","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"foundry":{"releaseCommands":["foundry-release-git","foundry-release-npm"]},"gitHead":"99dc7ec9dbfe88d8dc51e6338704be06088222e4","_id":"spritesheet-templates@10.2.0","_shasum":"c730b77985e3f1ca7f038b9a94a94d4e15758b70","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.6.2","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"dist":{"shasum":"c730b77985e3f1ca7f038b9a94a94d4e15758b70","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.2.0.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/spritesheet-templates-10.2.0.tgz_1484200149562_0.590125790797174"},"directories":{}},"10.2.1":{"name":"spritesheet-templates","description":"Convert spritesheet data into CSS or CSS pre-processor data","version":"10.2.1","homepage":"https://github.com/twolfson/spritesheet-templates","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"license":"MIT","main":"lib/spritesheet-templates","engines":{"node":">= 0.8.0"},"scripts":{"precheck":"twolfson-style precheck lib/ test/","lint":"twolfson-style lint lib/ test/","pretest":"twolfson-style install","test":"npm run precheck && mocha --timeout 10000 && npm run lint"},"dependencies":{"handlebars":"~4.0.5","handlebars-layouts":"~1.1.0","json-content-demux":"~0.1.2","underscore":"~1.4.2","underscore.string":"~3.0.3"},"devDependencies":{"css-validator":"~0.5.0","eight-track-normalize-multipart":"~0.2.0","express":"~3.4.8","foundry":"~4.3.2","foundry-release-git":"~2.0.2","foundry-release-npm":"~2.0.2","jscs":"~1.8.1","jshint":"~2.5.11","less":"~1.5.1","mocha":"~1.14.0","nine-track":"~3.0.1","stylus":"~0.41.3","temporary":"0.0.8","twolfson-style":"~1.6.0"},"keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"foundry":{"releaseCommands":["foundry-release-git","foundry-release-npm"]},"gitHead":"25cc0aaa5d84142063152637e0a4f77470339411","_id":"spritesheet-templates@10.2.1","_shasum":"5ef54fb78ed4a76f1932e410f72a8ab888b7cb9a","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.6.2","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"dist":{"shasum":"5ef54fb78ed4a76f1932e410f72a8ab888b7cb9a","tarball":"https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.2.1.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/spritesheet-templates-10.2.1.tgz_1484257773144_0.30262335180304945"},"directories":{}}},"readme":"# spritesheet-templates [![Build status](https://travis-ci.org/twolfson/spritesheet-templates.svg?branch=master)](https://travis-ci.org/twolfson/spritesheet-templates)\n\nConvert spritesheet data into CSS or CSS pre-processor data\n\n`spritesheet-templates`, formerly `json2css`, was built as part of [`spritesmith`][], a tool that converts images into spritesheets and CSS variables.\n\n[`spritesmith`]: https://github.com/Ensighten/spritesmith\n\n## Getting Started\nInstall the module with: `npm install spritesheet-templates`\n\n```js\n// Compilation\nvar templater = require('spritesheet-templates');\ntemplater({\n  sprites: [{\n    name: 'github', x: 0, y: 0, width: 10, height: 20\n  }, {\n    name: 'twitter', x: 10, y: 20, width: 20, height: 30\n  }, {\n    name: 'rss', x: 30, y: 50, width: 50, height: 50\n  }],\n  spritesheet: {\n    width: 80, height: 100, image: 'url/path/to/spritesheet.png'\n  }\n}, {format: 'stylus'}); /*\n// Result stylus\n$github_x = 0px;\n$github_y = 0px;\n...\n$github = 0px 0px 0px 0px 10px 20px 80px 100px 'url/path/to/spritesheet.png' 'github';\n...\n$twitter = 10px 20px -10px -20px 20px 30px 80px 100px 'url/path/to/spritesheet.png' 'twitter';\n...\n$rss = 30px 50px -30px -50px 50px 50px 80px 100px 'url/path/to/spritesheet.png' 'rss';\n...\nspriteWidth($sprite) {\n  width: $sprite[0];\n}\n...\nsprite($sprite) {\n  spriteImage($sprite)\n  spritePosition($sprite)\n  spriteWidth($sprite)\n  spriteHeight($sprite)\n}\n\n// Inside of your Stylus\n.github-logo {\n  sprite($github);\n}\n*/\n```\n\n## Documentation\n`spritesheet-templates` exports the function `templater` as its `module.exports`.\n\n### `templater(data, options)`\nConverter for spritesheet/sprite info into spritesheet\n\n- data `Object` - Container for data for template\n    - items `Object[]` - Deprecated alternative key to define `data.sprites`\n    - sprites `Object[]` - Array of objects with coordinate data about each sprite on the spritesheet\n        - * `Object` - Container for sprite coordinate data\n            - For reference, `*` symbolizes any index (e.g. `data.sprites[0]`)\n            - name `String` - Name to use for the image\n            - x `Number` - Horizontal coordinate of top-left corner of image\n            - y `Number` - Vertical coordinate of top-left corner of image\n            - width `Number` - Horizontal length of image in pixels\n            - height `Number` - Vertical length of image in pixels\n    - spritesheet `Object` - Information about spritesheet\n        - width `Number` - Horizontal length of image in pixels\n        - height `Number` - Vertical length of image in pixels\n        - image `String` - URL to use for spritesheet\n            - This will typically be used in `background-image`\n            - For example, `background-image: url({{spritesheet.image}});`\n    - spritesheet_info `Object` - Optional container for metadata about `spritesheet` and its representation\n        - name `String` - Prefix to use for all spritesheet variables\n            - For example, `icons` will generate `$icons-width`/`$icons-image`/etc in a SCSS template\n            - By default, this is `spritesheet` (e.g. `$spritesheet-width`, `$spritesheet-image`)\n    - Additional parameters for `retina` templates are documented in the [Retina parameters section](#retina-parameters)\n- options `Object` - Optional settings\n    - spritesheetName `String` - Deprecated alternative for `spritesheet_info.name`\n    - format `String` - Format to generate output in\n        - We accept any format inside of the [Templates section](#templates)\n            - Custom formats can be added via the [custom methods](#custom)\n        - By default, we will use the `css` format\n    - formatOpts `Mixed` - Options to pass through to the formatter\n\n**Returns:**\n\n- retVal `String` - Result from specified formatter\n\n#### Retina parameters\n`retina` templates require additional parameters `data.retina_sprites`, `data.retina_spritesheet` and `data.retina_groups` to be passed in.\n\nFor the variables to be useful, the retina spritesheet should be a 2x scale image of the original spritesheet. Similarly, retina sprites should be positioned in the same layout and order as their normal counterparts (e.g. `[{x: 0, y: 0}, {x: 20, y: 20}]` should correspond to `[{x: 0, y: 0}, {x: 40, y: 40}]`).\n\n- data `Object` - Same container as defined above\n    - retina_sprites `Object[]` - Array of objects with coordinate data about each retina sprite for the retina spritesheet\n        - Properties are retina equivalent of `data.sprites`\n        - These should be in the same order as their normal complements\n    - retina_spritesheet `Object` - Information about retina spritesheet\n        - Properties are retina equivalent of `data.spritesheet`\n    - retina_spritesheet_info `Object` - Optional container for metadata about `retina_spritesheet` and its representation\n        - name `String` - Prefix to use for all retina spritesheet variables\n            - For example, `retina-icons` will generate `$retina-icons-width`/`$retina-icons-image`/etc in a SCSS template\n            - By default, this is `retina-spritesheet` (e.g. `$retina-spritesheet-width`, `$retina-spritesheet-image`)\n    - retina_groups `Object[]` - Array of objects that maps to normal and retina sprites\n        - * `Object` - Container for data about sprite mapping\n            - name `String` - Name to refer to mapping by\n                - This is typically used for CSS selectors and variable names\n            - index `Number` - Index to look up corresponding normal/retina sprites from `data.sprites`/`data.retina_sprites`\n    - retina_groups_info `Object` - Optional container for metadata about `retina_groups` and its representation\n        - name `String` - Name to use for `retina_groups` variable\n            - For example, `icon-groups` will generate `$icons-groups` in a SCSS template\n            - By default, this is `retina-groups` (e.g. `$retina-groups`)\n\n### Templates\nBelow are our template options for `options.format`.\n\nHandlebars-based templates support inheritance via [`handlebars-layouts`][] (e.g. `{{#extend \"css\"}}`). Inherited templates must copy/paste JSON front matter. An example can be found in the [Examples section](#examples).\n\n[`handlebars-layouts`]: https://github.com/shannonmoeller/handlebars-layouts\n\nRetina templates have the same setup but are located in the [Retina templates section](#retina-templates) for convenience.\n\n#### `css`\nOuput CSS variables as CSS rules.\n\n**Options:**\n\n- cssSelector `Function` - Override mapping for CSS selector\n    - `cssSelector` should have signature `function (sprite) { return 'selector'; }`\n    - By default this will return `'.icon-' + sprite.name`\n    - It will receive `sprite` with all parameters designed for template\n\n**Handlebars blocks:**\n\n`css` is a Handlebars based template. We allow for overriding the following sections:\n\n- `{{#content \"sprites-comment\"}}` - Comment before CSS rules\n- `{{#content \"sprites\"}}` - CSS rules\n\n**Example:**\n\n```css\n.icon-sprite1 {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: 0px 0px;\n  width: 10px;\n  height: 20px;\n}\n.icon-sprite2 {\n/* ... */\n```\n\n#### `json`\nOutput CSS variables in JSON format.\n\n**Example:**\n\n```js\n{\n    \"sprite1\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 10,\n        \"height\": 20,\n        \"total_width\": 80,\n        \"total_height\": 100,\n        \"image\": \"nested/dir/spritesheet.png\",\n        \"offset_x\": 0,\n        \"offset_y\": 0,\n        \"px\": {\n            \"x\": \"0px\",\n            \"y\": \"0px\",\n            \"offset_x\": \"0px\",\n            \"offset_y\": \"0px\",\n            \"height\": \"20px\",\n            \"width\": \"10px\",\n            \"total_height\": \"100px\",\n            \"total_width\": \"80px\"\n        },\n        \"escaped_image\": \"nested/dir/spritesheet.png\"\n    },\n    \"sprite2\": {\n    // ...\n```\n\n#### `json_array`\nOutput CSS variables as an array of objects.\n\n**Example:**\n\n```js\n[\n    {\n        \"name\": \"sprite1\",\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 10,\n        \"height\": 20,\n        \"total_width\": 80,\n        \"total_height\": 100,\n        \"image\": \"nested/dir/spritesheet.png\",\n        \"offset_x\": 0,\n        \"offset_y\": 0,\n        \"px\": {\n            \"x\": \"0px\",\n            \"y\": \"0px\",\n            \"offset_x\": \"0px\",\n            \"offset_y\": \"0px\",\n            \"height\": \"20px\",\n            \"width\": \"10px\",\n            \"total_height\": \"100px\",\n            \"total_width\": \"80px\"\n        },\n        \"escaped_image\": \"nested/dir/spritesheet.png\"\n    },\n    {\n        \"name\": \"sprite2\",\n        // ...\n```\n\n#### `json_texture`\nOutput CSS variables as an object in format similar to that of [TexturePacker][]. Useful for game frameworks, such as [Phaser][], [Pixi.js][], and others.\n\n[TexturePacker]: https://www.codeandweb.com/texturepacker\n[Phaser]: http://phaser.io/\n[Pixi.js]: http://www.pixijs.com/\n\nFor consistency with [TexturePacker][], we will use the [basename][] of a given image. `spritesmith` provides this via `sprite.source_image`. If you would like to provide a custom name, then please define `sprite.frame_name`:\n\n[basename]: https://nodejs.org/api/path.html#path_path_basename_p_ext\n\n```js\n// Input\n{\n  sprites: [{\n    frame_name: 'hello', name: 'github', x: 0, y: 0, width: 10, height: 20\n  }]\n}\n\n// Output\n{\n  frames: {\n    hello: {x: 0, y: 0, w: 10, h: 20}\n  }\n}\n```\n\nIf neither `sprite.source_image` nor `spriteframe` is used, then `sprite.name` will be used.\n\nFor integration in `grunt-spritesmith`/`gulp.spritesmith`, please see their `cssVarMap` documentation.\n\n**Example:**\n```js\n{\n    \"frames\": {\n        \"mysprite.png\": {\n            \"frame\": {\n                \"x\": 10,\n                \"y\": 20,\n                \"w\": 20,\n                \"h\": 30\n            }\n        },\n        // ...\n    },\n    \"meta\": {\n        \"app\": \"spritesheet-templates\",\n        // ...\n        \"image\": \"nested/dir/spritesheet.png\",\n        \"scale\": 1,\n        \"size\": {\n            \"w\": 80,\n            \"h\": 100\n        }\n    }\n}\n```\n#### `less`\nOutput CSS variables as [LESS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['dasherize']` which yields a `dash-case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\n`less` is a Handlebars based template. We allow for overriding the following sections:\n\n- `{{#content \"sprites-comment\"}}` - Comment before LESS variable declarations\n- `{{#content \"sprites\"}}` - LESS variable declarations for sprites\n- `{{#content \"spritesheet\"}}` - LESS variable declarations for spritesheet\n- `{{#content \"sprite-functions-comment\"}}` - Comment before LESS functions for sprite variables\n- `{{#content \"sprite-functions\"}}` - LESS functions for sprite variables\n- `{{#content \"spritesheet-functions-comment\"}}` - Comment before LESS functions for spritesheet variables\n- `{{#content \"spritesheet-functions\"}}` - LESS functions for spritesheet variables\n\n**Example:**\n\n```less\n@sprite1-name: 'sprite1';\n@sprite1-x: 0px;\n@sprite1-y: 0px;\n@sprite1-offset-x: 0px;\n@sprite1-offset-y: 0px;\n@sprite1-width: 10px;\n@sprite1-height: 20px;\n@sprite1-total-width: 80px;\n@sprite1-total-height: 100px;\n@sprite1-image: 'nested/dir/spritesheet.png';\n@sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png' 'sprite1';\n@sprite2-name: 'sprite2';\n// ...\n```\n\n[LESS]: http://lesscss.org/\n\n#### `sass`\nOutput CSS variables as [SASS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['dasherize']` which yields a `dash-case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\n`sass` is a Handlebars based template. We allow for overriding the following sections:\n\n- `{{#content \"sprites-comment\"}}` - Comment before SASS variable declarations\n- `{{#content \"sprites\"}}` - SASS variable declarations for sprites\n- `{{#content \"spritesheet\"}}` - SASS variable declarations for spritesheet\n- `{{#content \"sprite-functions-comment\"}}` - Comment before SASS functions for sprite variables\n- `{{#content \"sprite-functions\"}}` - SASS functions for sprite variables\n- `{{#content \"spritesheet-functions-comment\"}}` - Comment before SASS functions for spritesheet variables\n- `{{#content \"spritesheet-functions\"}}` - SASS functions for spritesheet variables\n\n**Example:**\n\n```sass\n$sprite1-name: 'sprite1'\n$sprite1-x: 0px\n$sprite1-y: 0px\n$sprite1-offset-x: 0px\n$sprite1-offset-y: 0px\n$sprite1-width: 10px\n$sprite1-height: 20px\n$sprite1-total-width: 80px\n$sprite1-total-height: 100px\n$sprite1-image: 'nested/dir/spritesheet.png'\n$sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png' 'sprite1'\n$sprite2-name: 'sprite2'\n// ...\n```\n\n[SASS]: http://sass-lang.com/\n\n#### `scss`\nOutput CSS variables as [SCSS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['dasherize']` which yields a `dash-case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\n`scss` is a Handlebars based template. We allow for overriding the following sections:\n\n- `{{#content \"sprites-comment\"}}` - Comment before SCSS variable declarations\n- `{{#content \"sprites\"}}` - SCSS variable declarations for sprites\n- `{{#content \"spritesheet\"}}` - SCSS variable declarations for spritesheet\n- `{{#content \"sprite-functions-comment\"}}` - Comment before SCSS functions for sprite variables\n- `{{#content \"sprite-functions\"}}` - SCSS functions for sprite variables\n- `{{#content \"spritesheet-functions-comment\"}}` - Comment before SCSS functions for spritesheet variables\n- `{{#content \"spritesheet-functions\"}}` - SCSS functions for spritesheet variables\n\n**Example:**\n\n```scss\n$sprite1-name: 'sprite1';\n$sprite1-x: 0px;\n$sprite1-y: 0px;\n$sprite1-offset-x: 0px;\n$sprite1-offset-y: 0px;\n$sprite1-width: 10px;\n$sprite1-height: 20px;\n$sprite1-total-width: 80px;\n$sprite1-total-height: 100px;\n$sprite1-image: 'nested/dir/spritesheet.png';\n$sprite1: 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png' 'sprite1';\n$sprite2-name: 'sprite2';\n// ...\n```\n\n[SCSS]: http://sass-lang.com/\n\n#### `scss_maps`\nOutput CSS variables as [SCSS][] maps variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['underscored']` which yields a `snake_case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\n`scss_maps` is a Handlebars based template. We allow for overriding the following sections:\n\n- `{{#content \"sprites-comment\"}}` - Comment before SCSS variable declarations\n- `{{#content \"sprites\"}}` - SCSS variable declarations for sprites\n- `{{#content \"spritesheet\"}}` - SCSS variable declaration for spritesheet\n- `{{#content \"sprite-functions-comment\"}}` - Comment before SCSS functions for sprite variables\n- `{{#content \"sprite-functions\"}}` - SCSS functions for sprite variables\n- `{{#content \"spritesheet-functions-comment\"}}` - Comment before SCSS functions for spritesheet variables\n- `{{#content \"spritesheet-functions\"}}` - SCSS functions for spritesheet variables\n\n**Example:**\n\n```scss\n$sprite1: (\n  name: 'sprite1',\n  x: 0px,\n  y: 0px,\n  offset_x: 0px,\n  offset_y: 0px,\n  width: 10px,\n  height: 20px,\n  total_width: 80px,\n  total_height: 100px,\n  image: 'nested/dir/spritesheet.png'\n);\n$sprite2: (\n// ...\n```\n\n#### `stylus`\nOutput CSS variables as [Stylus][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['underscored']` which yields a `snake_case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\n`stylus` is a Handlebars based template. We allow for overriding the following sections:\n\n- `{{#content \"sprites-comment\"}}` - Comment before Stylus variable declarations\n- `{{#content \"sprites\"}}` - Stylus variable declarations for sprites\n- `{{#content \"spritesheet\"}}` - Stylus variable declarations for spritesheet\n- `{{#content \"sprite-functions-comment\"}}` - Comment before Stylus functions for sprite variables\n- `{{#content \"sprite-functions\"}}` - Stylus functions for sprite variables\n- `{{#content \"spritesheet-functions-comment\"}}` - Comment before Stylus functions for spritesheet variables\n- `{{#content \"spritesheet-functions\"}}` - Stylus functions for spritesheet variables\n\n**Example:**\n\n```stylus\n$sprite1_name = 'sprite1';\n$sprite1_x = 0px;\n$sprite1_y = 0px;\n$sprite1_offset_x = 0px;\n$sprite1_offset_y = 0px;\n$sprite1_width = 10px;\n$sprite1_height = 20px;\n$sprite1_total_width = 80px;\n$sprite1_total_height = 100px;\n$sprite1_image = 'nested/dir/spritesheet.png';\n$sprite1 = 0px 0px 0px 0px 10px 20px 80px 100px 'nested/dir/spritesheet.png';\n$sprite2_name = 'sprite2';\n// ...\n```\n\n[Stylus]: http://learnboost.github.io/stylus/\n\n#### Retina templates\nThese are a subset of templates that support retina spritesheets. These require retina parameters like `retina_sprites` are provided in order to work properly.\n\n#### `css_retina`\nOuput CSS variables as CSS rules with media query and additional rules for retina support.\n\n**Options:**\n\n- cssSelector `Function` - Override mapping for CSS selector\n    - `cssSelector` should have signature `function (retinaGroup) { return 'selector'; }`\n    - By default this will return `'.icon-' + retinaGroup.name`\n    - It will receive `retinaGroup` with all parameters designed for `retina_groups[*]` in templates (e.g. `name`, `normal`, `retina`)\n\n**Handlebars blocks:**\n\nWe extend from the [`css` template](#css) and have its blocks. There are no new sections for retina data.\n\n**Example:**\n\n```css\n.icon-sprite1 {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: 0px 0px;\n  width: 10px;\n  height: 20px;\n}\n/* ... */\n@media (-webkit-min-device-pixel-ratio: 2),\n       (min-resolution: 192dpi) {\n  .icon-sprite1 {\n    background-image: url(nested/dir/spritesheet@2x.png);\n    background-size: 80px 100px;\n  }\n}\n```\n\n#### `json_retina`\nOutput retina CSS variables in JSON format.\n\n**Example:**\n\n```js\n{\n    \"sprite1\": {\n        \"normal\": {\n            \"x\": 0,\n            \"y\": 0,\n            \"width\": 10,\n            \"height\": 20,\n            \"image\": \"nested/dir/spritesheet.png\",\n            \"escaped_image\": \"nested/dir/spritesheet.png\",\n            \"total_width\": 80,\n            \"total_height\": 100,\n            \"offset_x\": 0,\n            \"offset_y\": 0,\n            \"px\": {\n                \"x\": \"0px\",\n                \"y\": \"0px\",\n                \"offset_x\": \"0px\",\n                \"offset_y\": \"0px\",\n                \"height\": \"20px\",\n                \"width\": \"10px\",\n                \"total_height\": \"100px\",\n                \"total_width\": \"80px\"\n            }\n        },\n        \"retina\": {\n            \"x\": 0,\n            \"y\": 0,\n            // ...\n    },\n    \"sprite2\": {\n    // ...\n```\n\n#### `json_array_retina`\nOutput retina CSS variables as an array of objects.\n\n**Example:**\n\n```js\n[\n    {\n        \"name\": \"sprite1\",\n        \"normal\": {\n            \"x\": 0,\n            \"y\": 0,\n            \"width\": 10,\n            \"height\": 20,\n            \"total_width\": 80,\n            \"total_height\": 100,\n            // ...\n        },\n        \"retina\": {\n            \"x\": 0,\n            \"y\": 0,\n            \"width\": 20,\n            \"height\": 40,\n            \"total_width\": 160,\n            \"total_height\": 200,\n            // ...\n        }\n    },\n    {\n        \"name\": \"sprite2\",\n        // ...\n```\n\n#### `less_retina`\nOutput retina CSS variables as [LESS][] variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['dasherize']` which yields a `dash-case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\nWe extend from the [`less` template](#less) and have its blocks. There are no new sections for retina data.\n\n**Example:**\n\n```less\n@sprite1-name: 'sprite1';\n@sprite1-x: 0px;\n@sprite1-y: 0px;\n@sprite1-offset-x: 0px;\n@sprite1-offset-y: 0px;\n@sprite1-total-width: 80px;\n@sprite1-total-height: 100px;\n// ...\n@sprite2-2x-total-width: 160px;\n@sprite2-2x-total-height: 200px;\n@sprite2-2x-image: 'nested/dir/spritesheet@2x.png';\n@sprite2-2x: 0px 0px 0px 0px 20px 40px 160px 200px 'nested/dir/spritesheet@2x.png' 'sprite2@2x';\n// ...\n@sprite3-group: 'sprite3' @sprite3 @sprite3-2x;\n@retina-groups: @sprite1-group @sprite2-group @sprite3-group;\n// ...\n```\n\n#### `sass_retina`\nOutput retina CSS variables as [SASS][] variables and mixins.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['dasherize']` which yields a `dash-case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\nWe extend from the [`sass` template](#sass) and have its blocks. There are no new sections for retina data.\n\n**Example:**\n\n```scss\n$sprite1-name: 'sprite1'\n$sprite1-x: 0px\n$sprite1-y: 0px\n$sprite1-offset-x: 0px\n$sprite1-total-width: 80px\n$sprite1-total-height: 100px\n// ...\n$sprite2-2x-total-width: 160px\n$sprite2-2x-total-height: 200px\n$sprite2-2x-image: 'nested/dir/spritesheet@2x.png'\n$sprite2-2x: (20px, 40px, -20px, -40px, 40px, 60px, 160px, 200px, 'nested/dir/spritesheet@2x.png', 'sprite2@2x', )\n// ...\n$sprite3-group: ('sprite3', $sprite3, $sprite3-2x, )\n$retina-groups: ($sprite1-group, $sprite2-group, $sprite3-group, )\n// ...\n```\n\n#### `scss_retina`\nOutput retina CSS variables as [SCSS][] variables and mixins.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['dasherize']` which yields a `dash-case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\nWe extend from the [`scss` template](#scss) and have its blocks. There are no new sections for retina data.\n\n**Example:**\n\n```scss\n$sprite1-name: 'sprite1';\n$sprite1-x: 0px;\n$sprite1-y: 0px;\n$sprite1-offset-x: 0px;\n$sprite1-total-width: 80px;\n$sprite1-total-height: 100px;\n// ...\n$sprite2-2x-total-width: 160px;\n$sprite2-2x-total-height: 200px;\n$sprite2-2x-image: 'nested/dir/spritesheet@2x.png';\n$sprite2-2x: (20px, 40px, -20px, -40px, 40px, 60px, 160px, 200px, 'nested/dir/spritesheet@2x.png', 'sprite2@2x', );\n// ...\n$sprite3-group: ('sprite3', $sprite3, $sprite3-2x, );\n$retina-groups: ($sprite1-group, $sprite2-group, $sprite3-group, );\n// ...\n```\n\n#### `scss_maps_retina`\nOutput retina CSS variables as [SCSS][] maps variables.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['underscored']` which yields a `snake_case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\nWe extend from the [`scss_maps` template](#scss_maps) and have its blocks. There are no new sections for retina data.\n\n**Example:**\n\n```scss\n$sprite1: (\n  name: 'sprite1',\n  x: 0px,\n  y: 0px,\n  offset_x: 0px,\n  offset_y: 0px,\n  total_width: 80px,\n  total_height: 100px,\n  // ...\n);\n$sprite2: (\n  // ...\n  total-width: 160px,\n  total-height: 200px,\n  image: 'nested/dir/spritesheet@2x.png'\n);\n// ...\n$sprite3-group: (\n  name: 'sprite3',\n  normal: $sprite3,\n  retina: $sprite3-2x\n);\n$retina-groups: ($sprite1-group, $sprite2-group, $sprite3-group, );\n// ...\n```\n\n#### `stylus_retina`\nOutput retina CSS variables as [Stylus][] variables and mixins.\n\n**Options:**\n\n- functions `Boolean` - Flag to include mixins or not\n    - By default this is `true` (mixins will be included)\n- variableNameTransforms `String[]` - Array of `underscore.string` methods to run on variable names\n    - For example, `['camelize']` would transform `icon-home-x` to `iconHomeX`\n    - By default, this is `['underscored']` which yields a `snake_case` name\n    - `underscore.string`: http://epeli.github.io/underscore.string/#api\n        - We use `chain` which allows for `toUpperCase` and `toLowerCase`\n        - http://epeli.github.io/underscore.string/#s-string-gt-chain\n\n**Handlebars blocks:**\n\nWe extend from the [`stylus` template](#stylus) and have its blocks. There are no new sections for retina data.\n\n**Example:**\n\n```stylus\n$sprite1_name = 'sprite1';\n$sprite1_x = 0px;\n$sprite1_y = 0px;\n$sprite1_offset_x = 0px;\n$sprite1_offset_y = 0px;\n$sprite1_total_width = 80px;\n$sprite1_total_height = 100px;\n// ...\n$sprite2_2x_total_width = 160px;\n$sprite2_2x_total_height = 200px;\n$sprite2_2x_image = 'nested/dir/spritesheet@2x.png';\n$sprite2_2x = 20px 40px -20px -40px 40px 60px 160px 200px 'nested/dir/spritesheet@2x.png' 'sprite2@2x';\n// ...\n$sprite3_group = 'sprite3' $sprite3 $sprite3_2x;\n$retina_groups = $sprite1_group $sprite2_group $sprite3_group;\n// ...\n```\n\n#### Custom\nCustom templates can be added dynamically via `templater.addTemplate` and `templater.addHandlebarsTemplate`.\n\n##### Template data\nThe parameters passed into your template are known as `data`. These are a cloned copy of the `data` originally passed in. We add some normalized properties for your convenience.\n\n- data `Object` - Data available to template\n    - items `Object[]` - Deprecated alias for `data.sprites`\n    - sprites `Object[]` - Array of objects with coordinate data about each sprite on the spritesheet\n        - * `Object` - Container for sprite coordinate data\n            - For reference, `*` symbolizes any index (e.g. `data.sprites[0]`)\n            - name `String` - Name to use for the image\n            - x `Number` - Horizontal coordinate of top-left corner of image\n            - y `Number` - Vertical coordinate of top-left corner of image\n            - width `Number` - Horizontal length of image in pixels\n            - height `Number` - Vertical length of image in pixels\n            - total_width `Number` - Width of entire spritesheet\n            - total_height `Number` - Height of entire spritesheet\n            - image `String` - URL path to spritesheet\n            - escaped_image `String` - URL encoded `image`\n            - offset_x `Number` - Negative value of `x`. Useful to `background-position`\n            - offset_y `Number` - Negative value of `y`. Useful to `background-position`\n            - px `Object` - Container for numeric values including `px`\n                - x `String` - `x` suffixed with `px`\n                - y `String` - `y` suffixed with `px`\n                - width `String` - `width` suffixed with `px`\n                - height `String` - `height` suffixed with `px`\n                - total_width `String` - `total_width` suffixed with `px`\n                - total_height `String` - `total_height` suffixed with `px`\n                - offset_x `String` - `offset_x` suffixed with `px`\n                - offset_y `String` - `offset_y` suffixed with `px`\n    - spritesheet `Object` - Information about spritesheet\n        - name `String` - Deprecated alias for `spritesheet_info.name`\n        - width `Number` - Horizontal length of image in pixels\n        - height `Number` - Vertical length of image in pixels\n        - image `String` - URL to use for spritesheet\n            - This will typically be used in `background-image`\n            - For example, `background-image: url({{spritesheet.image}});`\n        - escaped_image `String` - URL encoded `image`\n        - px `Object` container for numeric values including `px`\n            - width `String` - `width` suffixed with `px`\n            - height `String` - `height` suffixed with `px`\n    - spritesheet_name `String` - Deprecated alias for `spritesheet_info.name`\n    - spritesheet_info `Object` - Container for information about `spritesheet` and its representation\n        - name `String` - Name for `spritesheet`\n    - options `Mixed` - Options to passed through via `options.formatOpts`\n    - If we have retina parameters were passed in, then we prepare additional retina properties as well\n        - More info can be found on these parameters in [Retina template data](#retina-template-data)\n\n###### Handlebars template data\nWe provide an extra set of data for `handlebars` templates for variable/string names.\n\n- data.sprites[*].strings `Object` - Container for sprite-relevant variable/string names\n    - Each of these strings will be transformed via `variableNameTransforms`\n    - name `String` - Transformed name of sprite (e.g. `icon-home`)\n    - name_name `String` - Transformed combination of sprite name and `-name` string (e.g. `icon-home-name`)\n    - name_x `String` - Transformed combination of sprite name and `-x` string (e.g. `icon-home-x`)\n    - name_y `String` - Transformed combination of sprite name and `-y` string (e.g. `icon-home-y`)\n    - name_offset_x `String` - Transformed combination of sprite name and `-offset-x` string (e.g. `icon-home-offset-x`)\n    - name_offset_y `String` - Transformed combination of sprite name and `-offset-y` string (e.g. `icon-home-offset-y`)\n    - name_width `String` - Transformed combination of sprite name and `-width` string (e.g. `icon-home-width`)\n    - name_height `String` - Transformed combination of sprite name and `-height` string (e.g. `icon-home-height`)\n    - name_total_width `String` - Transformed combination of sprite name and `-total-width` string (e.g. `icon-home-total-width`)\n    - name_total_height `String` - Transformed combination of sprite name and `-total-height` string (e.g. `icon-home-total-height`)\n    - name_image `String` - Transformed combination of sprite name and `-image` string (e.g. `icon-home-image`)\n    - name_sprites `String` - Transformed combination of sprite name and `-sprites` string (e.g. `icon-home-sprites`)\n    - name_group `String` - Transformed combination of sprite name and `-group` string (e.g. `icon-home-group`)\n    - name_group_name `String` - Transformed combination of sprite name and `-group-name` string (e.g. `icon-home-group-name`)\n    - name_normal `String` - Transformed combination of sprite name and `-normal` string (e.g. `icon-home-normal`)\n    - name_retina `String` - Transformed combination of sprite name and `-retina` string (e.g. `icon-home-retina`)\n    - bare_name `String` - Transformed word for `name`\n    - bare_x `String` - Transformed word for `x`\n    - bare_y `String` - Transformed word for `y`\n    - bare_offset_x `String` - Transformed word for `offset-x`\n    - bare_offset_y `String` - Transformed word for `offset-y`\n    - bare_width `String` - Transformed word for `width`\n    - bare_height `String` - Transformed word for `height`\n    - bare_total_width `String` - Transformed word for `total-width`\n    - bare_total_height `String` - Transformed word for `total-height`\n    - bare_image `String` - Transformed word for `image`\n    - bare_sprites `String` - Transformed word for `sprites`\n    - bare_group `String` - Transformed word for `group`\n    - bare_group_name `String` - Transformed word for `group-name`\n    - bare_normal `String` - Transformed word for `normal`\n    - bare_retina `String` - Transformed word for `retina`\n- data.spritesheet.strings `Object` - Deprecated container for spritesheet-relevant variable/string names\n    - Contents will match the same as `data.spritesheet_info.strings`\n- data.spritesheet_info.strings `Object` - Container for spritesheet-relevant variable/string names\n    - Each of these strings will be transformed via `variableNameTransforms`\n    - name `String` - Transformed name of spritesheet (e.g. `icon-home`)\n    - name_name `String` - Transformed combination of spritesheet name and `-name` string (e.g. `icon-home-name`)\n    - name_x `String` - Transformed combination of spritesheet name and `-x` string (e.g. `icon-home-x`)\n    - name_y `String` - Transformed combination of spritesheet name and `-y` string (e.g. `icon-home-y`)\n    - name_offset_x `String` - Transformed combination of spritesheet name and `-offset-x` string (e.g. `icon-home-offset-x`)\n    - name_offset_y `String` - Transformed combination of spritesheet name and `-offset-y` string (e.g. `icon-home-offset-y`)\n    - name_width `String` - Transformed combination of spritesheet name and `-width` string (e.g. `icon-home-width`)\n    - name_height `String` - Transformed combination of spritesheet name and `-height` string (e.g. `icon-home-height`)\n    - name_total_width `String` - Transformed combination of spritesheet name and `-total-width` string (e.g. `icon-home-total-width`)\n    - name_total_height `String` - Transformed combination of spritesheet name and `-total-height` string (e.g. `icon-home-total-height`)\n    - name_image `String` - Transformed combination of spritesheet name and `-image` string (e.g. `icon-home-image`)\n    - name_sprites `String` - Transformed combination of spritesheet name and `-sprites` string (e.g. `icon-home-sprites`)\n    - name_group `String` - Transformed combination of spritesheet name and `-group` string (e.g. `icon-home-group`)\n    - name_group_name `String` - Transformed combination of spritesheet name and `-group-name` string (e.g. `icon-home-group-name`)\n    - name_normal `String` - Transformed combination of spritesheet and `-normal` string (e.g. `icon-home-normal`)\n    - name_retina `String` - Transformed combination of spritesheet and `-retina` string (e.g. `icon-home-retina`)\n    - bare_name `String` - Transformed word for `name`\n    - bare_x `String` - Transformed word for `x`\n    - bare_y `String` - Transformed word for `y`\n    - bare_offset_x `String` - Transformed word for `offset-x`\n    - bare_offset_y `String` - Transformed word for `offset-y`\n    - bare_width `String` - Transformed word for `width`\n    - bare_height `String` - Transformed word for `height`\n    - bare_total_width `String` - Transformed word for `total-width`\n    - bare_total_height `String` - Transformed word for `total-height`\n    - bare_image `String` - Transformed word for `image`\n    - bare_sprites `String` - Transformed word for `sprites`\n    - bare_group `String` - Transformed word for `group`\n    - bare_group_name `String` - Transformed word for `group-name`\n    - bare_normal `String` - Transformed word for `normal`\n    - bare_retina `String` - Transformed word for `retina`\n- data.strings `Object` - Container for generic strings\n    - Each of these strings will be transformed via `variableNameTransforms`\n    - bare_name `String` - Transformed word for `name`\n    - bare_x `String` - Transformed word for `x`\n    - bare_y `String` - Transformed word for `y`\n    - bare_offset_x `String` - Transformed word for `offset-x`\n    - bare_offset_y `String` - Transformed word for `offset-y`\n    - bare_width `String` - Transformed word for `width`\n    - bare_height `String` - Transformed word for `height`\n    - bare_total_width `String` - Transformed word for `total-width`\n    - bare_total_height `String` - Transformed word for `total-height`\n    - bare_image `String` - Transformed word for `image`\n    - bare_sprites `String` - Transformed word for `sprites`\n    - bare_group `String` - Transformed word for `group`\n    - bare_group_name `String` - Transformed word for `group-name`\n    - bare_normal `String` - Transformed word for `normal`\n    - bare_retina `String` - Transformed word for `retina`\n\n###### Retina template data\nThese are additional properties of the template data when retina parameters have been passed in (e.g. `retina_sprites`, `retina_groups`). As with the normal data, it is cloned copy of the original data with additional properties for convenience.\n\n- data `Object` - Same container as defined above\n    - retina_sprites `Object[]` - Array of objects with coordinate data about each retina sprite for the retina spritesheet\n        - Properties are retina equivalent of `data.sprites` (e.g. `name`, `x`, `offset_y`, `px`)\n    - retina_spritesheet `Object` - Information about retina spritesheet\n        - Properties are retina equivalent of `data.spritesheet` (e.g. `width`, `image`, `px`)\n            - We do not provide `retina_spritesheet.name` as `name` is deprecated\n    - retina_spritesheet_info `Object` - Optional container for metadata about `retina_spritesheet` and its representation\n        - Properties are retina equivalent of `data.spritesheet_info` (e.g. `name`)\n    - retina_groups `Object[]` - Array of objects that maps to normal and retina sprites\n        - * `Object` - Container for data about sprite mapping\n            - name `String` - Name to refer to mapping by\n            - index `Number` - Index of corresponding normal/retina sprites from `data.sprites`/`data.retina_sprites`\n            - normal `Object` - Normal sprite from `data.sprites` that corresponds to our mapping\n                - This has all the same properties as `data.sprites[*]` (e.g. `name`, `x`, `offset_y`, `px`)\n            - retina `Object` - Retina sprite from `data.retina_sprites` that corresponds to our mapping\n                - This has all the same properties as `data.retina_sprites[*]` (e.g. `name`, `x`, `offset_y`, `px`)\n    - retina_groups_info `Object` - Optional container for metadata about `retina_groups` and its representation\n        - name `String` - Name for `retina_groups`\n\n###### Retina Handlebars template data\nRetina specific properties will have the same corresponding new data for Handlebars templates\n\n- data.retina_sprites[*].strings `Object` - Container for retina sprite-relevant variable/string names\n    - Each of these strings will be transformed via `variableNameTransforms`\n    - Properties are retina equivalent of `data.sprites[*].strings` (e.g. `name`, `name_name`, `bare_name`)\n- data.retina_spritesheet_info.strings `Object` - Container for retina spritesheet-relevant variable/string names\n    - Each of these strings will be transformed via `variableNameTransforms`\n    - Properties are retina equivalent of `data.spritesheet_info.strings` (e.g. `name`, `name_sprites`, `bare_name`)\n- data.retina_groups[*].strings `Object` - Container for group-relevant variable/string names\n    - Each of these strings will be transformed via `variableNameTransforms`\n    - name `String` - Transformed name of retina group (e.g. `icon-home`)\n    - name_name `String` - Transformed combination of retina group name and `-name` string (e.g. `icon-home-name`)\n    - name_x `String` - Transformed combination of retina group name and `-x` string (e.g. `icon-home-x`)\n    - name_y `String` - Transformed combination of retina group name and `-y` string (e.g. `icon-home-y`)\n    - name_offset_x `String` - Transformed combination of retina group name and `-offset-x` string (e.g. `icon-home-offset-x`)\n    - name_offset_y `String` - Transformed combination of retina group name and `-offset-y` string (e.g. `icon-home-offset-y`)\n    - name_width `String` - Transformed combination of retina group name and `-width` string (e.g. `icon-home-width`)\n    - name_height `String` - Transformed combination of retina group name and `-height` string (e.g. `icon-home-height`)\n    - name_total_width `String` - Transformed combination of retina group name and `-total-width` string (e.g. `icon-home-total-width`)\n    - name_total_height `String` - Transformed combination of retina group name and `-total-height` string (e.g. `icon-home-total-height`)\n    - name_image `String` - Transformed combination of retina group name and `-image` string (e.g. `icon-home-image`)\n    - name_sprites `String` - Transformed combination of retina group name and `-sprites` string (e.g. `icon-home-sprites`)\n    - name_group `String` - Transformed combination of retina group name and `-group` string (e.g. `icon-home-group`)\n    - name_group_name `String` - Transformed combination of retina group name and `-group-name` string (e.g. `icon-home-group-name`)\n    - name_normal `String` - Transformed combination of retina group name and `-normal` string (e.g. `icon-home-normal`)\n    - name_retina `String` - Transformed combination of retina group name and `-retina` string (e.g. `icon-home-retina`)\n    - bare_name `String` - Transformed word for `name`\n    - bare_x `String` - Transformed word for `x`\n    - bare_y `String` - Transformed word for `y`\n    - bare_offset_x `String` - Transformed word for `offset-x`\n    - bare_offset_y `String` - Transformed word for `offset-y`\n    - bare_width `String` - Transformed word for `width`\n    - bare_height `String` - Transformed word for `height`\n    - bare_total_width `String` - Transformed word for `total-width`\n    - bare_total_height `String` - Transformed word for `total-height`\n    - bare_image `String` - Transformed word for `image`\n    - bare_sprites `String` - Transformed word for `sprites`\n    - bare_group `String` - Transformed word for `group`\n    - bare_group_name `String` - Transformed word for `group-name`\n    - bare_normal `String` - Transformed word for `normal`\n    - bare_retina `String` - Transformed word for `retina`\n- data.retina_groups_info.strings `Object` - Container for retina groups relevant variable/string names\n    - Each of these strings will be transformed via `variableNameTransforms`\n    - name `String` - Transformed name of retina groups (e.g. `icon-home`)\n    - name_name `String` - Transformed combination of retina groups name and `-name` string (e.g. `icon-home-name`)\n    - name_x `String` - Transformed combination of retina groups name and `-x` string (e.g. `icon-home-x`)\n    - name_y `String` - Transformed combination of retina groups name and `-y` string (e.g. `icon-home-y`)\n    - name_offset_x `String` - Transformed combination of retina groups name and `-offset-x` string (e.g. `icon-home-offset-x`)\n    - name_offset_y `String` - Transformed combination of retina groups name and `-offset-y` string (e.g. `icon-home-offset-y`)\n    - name_width `String` - Transformed combination of retina groups name and `-width` string (e.g. `icon-home-width`)\n    - name_height `String` - Transformed combination of retina groups name and `-height` string (e.g. `icon-home-height`)\n    - name_total_width `String` - Transformed combination of retina groups name and `-total-width` string (e.g. `icon-home-total-width`)\n    - name_total_height `String` - Transformed combination of retina groups name and `-total-height` string (e.g. `icon-home-total-height`)\n    - name_image `String` - Transformed combination of retina groups name and `-image` string (e.g. `icon-home-image`)\n    - name_sprites `String` - Transformed combination of retina groups name and `-sprites` string (e.g. `icon-home-sprites`)\n    - name_group `String` - Transformed combination of retina groups name and `-group` string (e.g. `icon-home-group`)\n    - name_group_name `String` - Transformed combination of retina groups name and `-group-name` string (e.g. `icon-home-group-name`)\n    - name_normal `String` - Transformed combination of retina groups name and `-normal` string (e.g. `icon-home-normal`)\n    - name_retina `String` - Transformed combination of retina groups name and `-retina` string (e.g. `icon-home-retina`)\n    - bare_name `String` - Transformed word for `name`\n    - bare_x `String` - Transformed word for `x`\n    - bare_y `String` - Transformed word for `y`\n    - bare_offset_x `String` - Transformed word for `offset-x`\n    - bare_offset_y `String` - Transformed word for `offset-y`\n    - bare_width `String` - Transformed word for `width`\n    - bare_height `String` - Transformed word for `height`\n    - bare_total_width `String` - Transformed word for `total-width`\n    - bare_total_height `String` - Transformed word for `total-height`\n    - bare_image `String` - Transformed word for `image`\n    - bare_sprites `String` - Transformed word for `sprites`\n    - bare_group `String` - Transformed word for `group`\n    - bare_group_name `String` - Transformed word for `group-name`\n    - bare_normal `String` - Transformed word for `normal`\n    - bare_retina `String` - Transformed word for `retina`\n\n##### `templater.addTemplate(name, fn)`\nMethod to define a custom template under the format of `name`.\n\n- name `String` - Key to store template under for reference via `options.format`\n- fn `Function` - Template function\n    - Should have signature of `function (data)` and return a `String` output\n\n##### `templater.addHandlebarsTemplate(name, tmplStr)`\nMethod to define a custom handlebars template under the format of `name`.\n\nAs noted in the [Templates section](#templates), these can inherit from existing templates via [`handlebars-layouts`][] conventions (e.g. `{{#extend \"scss\"}}`). An example can be found in the [Examples section](#examples).\n\n- name `String` - Key to store template under for reference via `options.format`\n- tmplStr `String` - Handlebars template to use for formatting\n    - This will receive `data` as its `data` (e.g. `{{sprites}}` is `data.sprites`)\n\n##### `templater.addMustacheTemplate(name, tmplStr)`\nDeprecated alias for `templater.addHandlebarsTemplate`\n\n## Examples\n### Retina configuration\nIn this example, we will process a template with retina data.\n\n```js\nvar templater = require('spritesheet-templates');\ntemplater({\n  sprites: [{\n    name: 'github', x: 0, y: 0, width: 10, height: 20\n  }, {\n    name: 'twitter', x: 10, y: 20, width: 20, height: 30\n  }, {\n    name: 'rss', x: 30, y: 50, width: 50, height: 50\n  }],\n  // Note that the retina sprites are in the same order as `sprites`\n  retina_sprites: [{\n    name: 'github@2x', x: 0, y: 0, width: 20, height: 40\n  }, {\n    name: 'twitter@2x', x: 20, y: 40, width: 40, height: 60\n  }, {\n    name: 'rss@2x', x: 60, y: 100, width: 100, height: 100\n  }],\n  spritesheet: {\n    width: 80, height: 100, image: 'url/path/to/spritesheet.png'\n  },\n  retina_spritesheet: {\n    width: 160, height: 200, image: 'url/path/to/spritesheet@2x.png'\n  },\n  retina_groups: [{\n    name: 'github', index: 0\n  }, {\n    name: 'twitter', index: 1\n  }, {\n    name: 'rss', index: 2\n  }]\n}, {format: 'scss_retina'}); /*\n$github-name: 'github';\n$github-x: 0px;\n...\n$twitter-2x-name: 'twitter@2x';\n$twitter-2x-x: 20px;\n...\n$rss-group-name: 'rss';\n$rss-group: ('rss', $rss, $rss-2x, );\n$retina-groups: ($github-group, $twitter-group, $rss-group, );\n*/\n```\n\n### Inheriting from a template\nIn this example, we will extend the SCSS template to output a minimal set of template data.\n\nIt should be noted that we must include the JSON front matter from the original template we are inheriting from to preserve default casing and options.\n\n**scss-minimal.handlebars:**\n\n```handlebars\n{\n  // Default options\n  'functions': true,\n  'variableNameTransforms': ['dasherize']\n}\n\n{{#extend \"scss\"}}\n{{#content \"sprites\"}}\n{{#each sprites}}\n${{strings.name}}: ({{px.x}}, {{px.y}}, {{px.offset_x}}, {{px.offset_y}}, {{px.width}}, {{px.height}}, {{px.total_width}}, {{px.total_height}}, '{{{escaped_image}}}', '{{name}}', );\n{{/each}}\n{{/content}}\n{{#content \"spritesheet\"}}\n${{spritesheet_info.strings.name_sprites}}: ({{#each sprites}}${{strings.name}}, {{/each}});\n${{spritesheet_info.strings.name}}: ({{spritesheet.px.width}}, {{spritesheet.px.height}}, '{{{spritesheet.escaped_image}}}', ${{spritesheet_info.strings.name_sprites}}, );\n{{/content}}\n{{/extend}}\n```\n\n**index.js:**\n\n```js\n// Load in our dependencies\nvar fs = require('fs');\nvar templater = require('spritesheet-templates');\n\n// Register our new template\nvar scssMinimalHandlebars = fs.readFileSync('scss-minimal.handlebars', 'utf8');\ntemplater.addHandlebarsTemplate('scss-minimal', scssMinimalHandlebars);\n\n// Run our templater\ntemplater({\n  sprites: [{\n    name: 'github', x: 0, y: 0, width: 10, height: 20\n  }, {\n    name: 'twitter', x: 10, y: 20, width: 20, height: 30\n  }, {\n    name: 'rss', x: 30, y: 50, width: 50, height: 50\n  }],\n  spritesheet: {\n    width: 80, height: 100, image: 'url/path/to/spritesheet.png'\n  }\n}, {format: 'scss-minimal'}); /*\n$github: (0px, 0px, 0px, 0px, 10px, 20px, 80px, 100px, 'url/path/to/spritesheet.png', 'github', );\n$twitter: (10px, 20px, -10px, -20px, 20px, 30px, 80px, 100px, 'url/path/to/spritesheet.png', 'twitter', );\n$rss: (30px, 50px, -30px, -50px, 50px, 50px, 80px, 100px, 'url/path/to/spritesheet.png', 'rss', );\n$spritesheet-sprites: ($github, $twitter, $rss, );\n$spritesheet: (80px, 100px, 'url/path/to/spritesheet.png', $spritesheet-sprites, );\n*/\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via `npm run lint` and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gratipay] via [gratipay][].\n\n[![Support via Gratipay][gratipay-badge]][gratipay]\n\n[gratipay-badge]: https://cdn.rawgit.com/gratipay/gratipay-badge/2.x.x/dist/gratipay.png\n[gratipay]: https://www.gratipay.com/twolfson/\n\n## Unlicense\nAs of Sep 08 2013, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n\nPrior to Sep 08 2013, this repository and its contents were licensed under the [MIT license][].\n\n[MIT license]: https://github.com/twolfson/spritesheet-templates/blob/e601307209b75faa48cb65388a17e0047b561aa0/LICENSE-MIT\n","maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"time":{"modified":"2017-05-30T11:59:28.404Z","created":"2014-12-23T01:01:31.043Z","7.0.0":"2014-12-23T01:01:31.043Z","7.0.1":"2014-12-23T01:03:20.355Z","7.0.2":"2014-12-23T01:07:21.561Z","7.1.0":"2014-12-23T01:45:17.851Z","7.1.1":"2014-12-23T01:59:38.521Z","7.2.0":"2014-12-23T02:11:32.715Z","8.0.0":"2014-12-23T05:44:38.305Z","8.1.0":"2014-12-23T07:34:03.436Z","8.2.0":"2014-12-23T09:21:30.559Z","8.2.1":"2015-02-10T06:23:42.571Z","8.3.0":"2015-02-17T08:09:09.170Z","8.4.0":"2015-02-19T03:06:32.250Z","9.0.0":"2015-02-20T04:15:12.373Z","9.0.1":"2015-02-23T04:10:12.347Z","9.1.0":"2015-02-23T04:25:27.124Z","9.1.1":"2015-02-23T04:47:04.884Z","9.2.0":"2015-03-20T06:51:01.891Z","9.2.1":"2015-03-20T07:30:28.673Z","9.2.2":"2015-03-22T01:31:17.892Z","9.3.0":"2015-03-28T07:01:25.553Z","9.3.1":"2015-03-28T07:27:15.078Z","9.3.2":"2015-03-28T07:58:35.751Z","9.4.0":"2015-03-30T04:48:30.492Z","9.4.1":"2015-04-16T07:25:26.921Z","9.5.0":"2015-05-07T06:34:51.143Z","9.5.1":"2015-06-01T03:17:09.638Z","9.5.2":"2015-06-01T03:36:37.622Z","9.6.0":"2015-06-01T04:04:54.435Z","9.6.1":"2015-06-03T03:20:24.561Z","10.0.0":"2015-07-29T06:48:54.274Z","10.0.1":"2016-02-04T05:15:22.084Z","10.1.0":"2016-02-04T05:16:26.871Z","10.1.1":"2016-03-19T23:45:15.746Z","10.1.2":"2016-03-23T00:51:23.077Z","10.1.3":"2016-06-06T18:47:08.853Z","10.1.4":"2016-06-06T18:50:06.843Z","10.2.0":"2017-01-12T05:49:09.809Z","10.2.1":"2017-01-12T21:49:35.276Z"},"homepage":"https://github.com/twolfson/spritesheet-templates","keywords":["json","css","sass","scss","stylus","less","sprite","spritesheet","template","format"],"repository":{"type":"git","url":"git://github.com/twolfson/spritesheet-templates.git"},"author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"bugs":{"url":"https://github.com/twolfson/spritesheet-templates/issues"},"readmeFilename":"README.md","license":"MIT","users":{"draganhr":true,"sundaycrafts":true,"yanlaichang":true,"patta":true},"_attachments":{},"_etag":"W/\"592d5ea0-1ec29\"","_lastModified":"Tue, 30 May 2017 11:59:28 GMT","_cached":true}